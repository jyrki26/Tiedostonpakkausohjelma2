<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Tiedostonpakkausohjelma"><sessioninfo id="lx8-fuxi135-779e159d" start="1599295078370" dump="1599295079180"/><package name="Tiedostonpakkausohjelma/tools"><class name="Tiedostonpakkausohjelma/tools/BinaryHeap" sourcefilename="BinaryHeap.java"><method name="&lt;init&gt;" desc="([LTiedostonpakkausohjelma/algorithms/Node;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(LTiedostonpakkausohjelma/algorithms/Node;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteMin" desc="()LTiedostonpakkausohjelma/algorithms/Node;" line="41"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushDown" desc="(I)V" line="56"><counter type="INSTRUCTION" missed="4" covered="57"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parent" desc="(I)I" line="79"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="left" desc="(I)I" line="88"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="right" desc="(I)I" line="97"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="change" desc="(II)V" line="107"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLast" desc="()I" line="118"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="170"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="34"/><counter type="COMPLEXITY" missed="1" covered="14"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Tiedostonpakkausohjelma/tools/CharAmountsMap" sourcefilename="CharAmountsMap.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addChar" desc="(LTiedostonpakkausohjelma/algorithms/HashMapNode;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addNode" desc="(LTiedostonpakkausohjelma/algorithms/HashMapNode;LTiedostonpakkausohjelma/algorithms/HashMapNode;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hash" desc="(C)I" line="74"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="increaseSize" desc="()V" line="85"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsChar" desc="(C)Z" line="112"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="(C)I" line="127"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keyset" desc="()[C" line="137"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addCode" desc="(CLjava/lang/String;)V" line="162"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnCode" desc="(C)Ljava/lang/String;" line="174"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="search" desc="(LTiedostonpakkausohjelma/algorithms/HashMapNode;C)LTiedostonpakkausohjelma/algorithms/HashMapNode;" line="187"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="290"/><counter type="BRANCH" missed="0" covered="28"/><counter type="LINE" missed="0" covered="68"/><counter type="COMPLEXITY" missed="0" covered="25"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Tiedostonpakkausohjelma/tools/BinaryConverter" sourcefilename="BinaryConverter.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stringToByte" desc="(Ljava/lang/String;)B" line="10"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitBytes" desc="([B)I" line="15"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertBytes" desc="([B)Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="byteToString" desc="([B)Ljava/lang/String;" line="37"><counter type="INSTRUCTION" missed="0" covered="119"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="166"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="BinaryConverter.java"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="5" mb="0" cb="0"/><line nr="11" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="10" mb="0" cb="4"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="9" mb="0" cb="2"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="12" mb="0" cb="2"/><line nr="45" mi="0" ci="17" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="20" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="2"/><line nr="51" mi="0" ci="5" mb="0" cb="2"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="166"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BinaryHeap.java"><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="13" mb="0" cb="4"/><line nr="27" mi="0" ci="10" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="2"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="2"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="15" mb="1" cb="1"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="11" mb="0" cb="2"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="8" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="170"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="34"/><counter type="COMPLEXITY" missed="1" covered="14"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CharAmountsMap.java"><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="2"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><line nr="37" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="9" mb="0" cb="2"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="2"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="2"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="2"/><line nr="91" mi="0" ci="4" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="2"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="8" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="2"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="12" mb="0" cb="2"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="9" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="9" mb="0" cb="2"/><line nr="140" mi="0" ci="5" mb="0" cb="2"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="2"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="9" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="9" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="2"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="2"/><line nr="191" mi="0" ci="6" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="290"/><counter type="BRANCH" missed="0" covered="28"/><counter type="LINE" missed="0" covered="68"/><counter type="COMPLEXITY" missed="0" covered="25"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="4" covered="626"/><counter type="BRANCH" missed="1" covered="53"/><counter type="LINE" missed="1" covered="138"/><counter type="COMPLEXITY" missed="1" covered="51"/><counter type="METHOD" missed="0" covered="25"/><counter type="CLASS" missed="0" covered="3"/></package><package name="Tiedostonpakkausohjelma/ui"><class name="Tiedostonpakkausohjelma/ui/AppUi" sourcefilename="AppUi.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="start" desc="()V" line="31"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dialog" desc="()V" line="52"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compressHuffman" desc="()V" line="70"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decompressHuffman" desc="()V" line="96"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="169" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="55" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="AppUi.java"><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="6" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="2" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="2" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="2" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="6" ci="0" mb="0" cb="0"/><line nr="100" mi="7" ci="0" mb="0" cb="0"/><line nr="101" mi="7" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="169" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="55" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="169" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="55" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="Tiedostonpakkausohjelma"><class name="Tiedostonpakkausohjelma/Main" sourcefilename="Main.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="15"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Main.java"><line nr="8" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="4" ci="0" mb="0" cb="0"/><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="Tiedostonpakkausohjelma/fileHandler"><class name="Tiedostonpakkausohjelma/fileHandler/FileHandler" sourcefilename="FileHandler.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()Ljava/lang/String;" line="33"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeToFile" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="50"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeBytes" desc="(Ljava/lang/String;[B)V" line="61"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readBytes" desc="(Ljava/lang/String;)[B" line="70"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compressionRate" desc="()Ljava/lang/String;" line="75"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="108" covered="6"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="34" covered="3"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FileHandler.java"><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="6" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="2" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="8" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="108" covered="6"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="34" covered="3"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="108" covered="6"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="34" covered="3"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></package><package name="Tiedostonpakkausohjelma/algorithms"><class name="Tiedostonpakkausohjelma/algorithms/DecompressHuffman" sourcefilename="DecompressHuffman.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;LTiedostonpakkausohjelma/fileHandler/FileHandler;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decompress" desc="()V" line="33"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildTree" desc="(Ljava/lang/String;I)LTiedostonpakkausohjelma/algorithms/Node;" line="49"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="codeReader" desc="(Ljava/lang/String;)I" line="68"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findChar" desc="(LTiedostonpakkausohjelma/algorithms/Node;Ljava/lang/String;)C" line="88"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recreateText" desc="(Ljava/lang/String;)Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="76" covered="123"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="15" covered="28"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Tiedostonpakkausohjelma/algorithms/Huffman" sourcefilename="Huffman.java"><method name="&lt;init&gt;" desc="(LTiedostonpakkausohjelma/fileHandler/FileHandler;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startHuffman" desc="()V" line="38"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildHashMap" desc="(Ljava/lang/String;)LTiedostonpakkausohjelma/tools/CharAmountsMap;" line="57"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createNodes" desc="(LTiedostonpakkausohjelma/tools/CharAmountsMap;)LTiedostonpakkausohjelma/tools/BinaryHeap;" line="78"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTree" desc="(LTiedostonpakkausohjelma/tools/BinaryHeap;)LTiedostonpakkausohjelma/algorithms/Node;" line="95"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createCode" desc="(LTiedostonpakkausohjelma/algorithms/Node;Ljava/lang/String;)V" line="119"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compress" desc="()V" line="139"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="biteDivider" desc="()V" line="149"><counter type="INSTRUCTION" missed="118" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="226" covered="141"/><counter type="BRANCH" missed="18" covered="8"/><counter type="LINE" missed="46" covered="30"/><counter type="COMPLEXITY" missed="13" covered="8"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Tiedostonpakkausohjelma/algorithms/Node" sourcefilename="Node.java"><method name="&lt;init&gt;" desc="(IC)V" line="16"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumber" desc="()I" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLeft" desc="(LTiedostonpakkausohjelma/algorithms/Node;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRight" desc="(LTiedostonpakkausohjelma/algorithms/Node;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLeft" desc="()LTiedostonpakkausohjelma/algorithms/Node;" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRight" desc="()LTiedostonpakkausohjelma/algorithms/Node;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCharacter" desc="()C" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="35"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Tiedostonpakkausohjelma/algorithms/HashMapNode" sourcefilename="HashMapNode.java"><method name="&lt;init&gt;" desc="(CI)V" line="13"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNext" desc="(LTiedostonpakkausohjelma/algorithms/HashMapNode;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNext" desc="()LTiedostonpakkausohjelma/algorithms/HashMapNode;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCode" desc="(Ljava/lang/String;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()C" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()I" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setKey" desc="(C)V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCode" desc="()Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="(I)V" line="49"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="39"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Tiedostonpakkausohjelma/algorithms/Node$ImplementComparator" sourcefilename="Node.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(LTiedostonpakkausohjelma/algorithms/Node;LTiedostonpakkausohjelma/algorithms/Node;)I" line="32"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Node.java"><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="7" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="35"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="Huffman.java"><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="6" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="2"/><line nr="59" mi="0" ci="6" mb="0" cb="2"/><line nr="60" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="11" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="9" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="2"/><line nr="82" mi="0" ci="13" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="2"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="2" cb="0"/><line nr="120" mi="6" ci="0" mb="0" cb="0"/><line nr="122" mi="8" ci="0" mb="0" cb="0"/><line nr="124" mi="10" ci="0" mb="6" cb="0"/><line nr="125" mi="6" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="6" ci="0" mb="0" cb="0"/><line nr="130" mi="6" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="9" ci="0" mb="2" cb="0"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="5" ci="0" mb="0" cb="0"/><line nr="144" mi="6" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="11" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="8" ci="0" mb="2" cb="0"/><line nr="156" mi="7" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="9" ci="0" mb="2" cb="0"/><line nr="163" mi="3" ci="0" mb="2" cb="0"/><line nr="164" mi="6" ci="0" mb="0" cb="0"/><line nr="165" mi="8" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="173" mi="6" ci="0" mb="2" cb="0"/><line nr="174" mi="16" ci="0" mb="0" cb="0"/><line nr="176" mi="8" ci="0" mb="0" cb="0"/><line nr="179" mi="6" ci="0" mb="0" cb="0"/><line nr="180" mi="3" ci="0" mb="0" cb="0"/><line nr="181" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="226" covered="141"/><counter type="BRANCH" missed="18" covered="8"/><counter type="LINE" missed="46" covered="30"/><counter type="COMPLEXITY" missed="13" covered="8"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HashMapNode.java"><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="39"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DecompressHuffman.java"><line nr="15" mi="0" ci="7" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="9" ci="0" mb="0" cb="0"/><line nr="37" mi="7" ci="0" mb="0" cb="0"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="2"/><line nr="50" mi="0" ci="11" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="1" cb="1"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="10" mb="1" cb="3"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="2"/><line nr="90" mi="0" ci="5" mb="0" cb="2"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="8" ci="0" mb="2" cb="0"/><line nr="110" mi="6" ci="0" mb="0" cb="0"/><line nr="111" mi="7" ci="0" mb="2" cb="0"/><line nr="112" mi="8" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="76" covered="123"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="15" covered="28"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="322" covered="338"/><counter type="BRANCH" missed="24" covered="18"/><counter type="LINE" missed="66" covered="88"/><counter type="COMPLEXITY" missed="23" covered="31"/><counter type="METHOD" missed="10" covered="23"/><counter type="CLASS" missed="1" covered="4"/></package><counter type="INSTRUCTION" missed="613" covered="970"/><counter type="BRANCH" missed="33" covered="71"/><counter type="LINE" missed="160" covered="229"/><counter type="COMPLEXITY" missed="40" covered="83"/><counter type="METHOD" missed="22" covered="49"/><counter type="CLASS" missed="3" covered="8"/></report>